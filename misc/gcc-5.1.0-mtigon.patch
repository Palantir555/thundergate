diff -rupT gcc-5.1.0-orig/gcc/config/mips/mips.c gcc-5.1.0/gcc/config/mips/mips.c
--- gcc-5.1.0-orig/gcc/config/mips/mips.c	2015-01-28 03:44:39.000000000 -0600
+++ gcc-5.1.0/gcc/config/mips/mips.c	2015-05-03 02:50:24.484321081 -0500
@@ -12638,6 +12638,13 @@ mips_init_libfuncs (void)
	      set_optab_libfunc (smod_optab, SImode, "__vr4120_modsi3");
	    }
	
+	  if (TARGET_TIGON)
+	    {
+	      set_optab_libfunc (smul_optab, DImode, "__muldi3");
+	      set_optab_libfunc (sdiv_optab, DImode, "__divdi3");
+	      set_optab_libfunc (sdiv_optab, SImode, "__divsi3");
+	    }
+	
	  if (TARGET_MIPS16 && TARGET_HARD_FLOAT_ABI)
	    {
	      /* Register the MIPS16 -mhard-float stubs.  */
@@ -18074,6 +18081,8 @@ mips_mulsidi3_gen_fn (enum rtx_code ext_
	    }
	  else
	    {
+	      if (TARGET_TIGON)
+		return NULL;
	      if (ISA_HAS_R6MUL)
		return (signed_p ? gen_mulsidi3_32bit_r6 : gen_umulsidi3_32bit_r6);
	      if (TARGET_MIPS16)
diff -rupT gcc-5.1.0-orig/gcc/config/mips/mips.h gcc-5.1.0/gcc/config/mips/mips.h
--- gcc-5.1.0-orig/gcc/config/mips/mips.h	2015-01-19 17:05:41.000000000 -0600
+++ gcc-5.1.0/gcc/config/mips/mips.h	2015-05-03 02:38:03.387312001 -0500
@@ -328,8 +328,8 @@ struct mips_cpu_info {
	   directly accessible, while the command-line options select
	   TARGET_HARD_FLOAT_ABI and TARGET_SOFT_FLOAT_ABI to reflect the ABI
	   in use.  */
-	#define TARGET_HARD_FLOAT (TARGET_HARD_FLOAT_ABI && !TARGET_MIPS16)
-	#define TARGET_SOFT_FLOAT (TARGET_SOFT_FLOAT_ABI || TARGET_MIPS16)
+	#define TARGET_HARD_FLOAT (TARGET_HARD_FLOAT_ABI && !TARGET_MIPS16 && !TARGET_TIGON)
+	#define TARGET_SOFT_FLOAT (TARGET_SOFT_FLOAT_ABI || TARGET_MIPS16 || TARGET_TIGON)
	
	/* TARGET_FLOAT64 represents -mfp64 and TARGET_FLOATXX represents
	   -mfpxx, derive TARGET_FLOAT32 to represent -mfp32.  */
@@ -874,7 +874,8 @@ struct mips_cpu_info {
	
	/* ISA has 32 single-precision registers.  */
	#define ISA_HAS_ODD_SPREG	((mips_isa_rev >= 1			\
-					  && !TARGET_LOONGSON_3A)		\
+					  && !TARGET_LOONGSON_3A		\
+					  && !TARGET_TIGON)			\
					 || TARGET_FLOAT64			\
					 || TARGET_MIPS5900)
	
@@ -888,7 +889,8 @@ struct mips_cpu_info {
					  || TARGET_MAD				\
					  || (mips_isa_rev >= 1			\
					      && mips_isa_rev <= 5))		\
-					 && !TARGET_MIPS16)
+					 && !TARGET_MIPS16			\
+					 && !TARGET_TIGON)
	
	/* ISA has a three-operand multiplication instruction.  */
	#define ISA_HAS_DMUL3		(TARGET_64BIT				\
@@ -896,7 +898,7 @@ struct mips_cpu_info {
					 && !TARGET_MIPS16)
	
	/* ISA has HI and LO registers.  */
-	#define ISA_HAS_HILO		(mips_isa_rev <= 5)
+	#define ISA_HAS_HILO		((mips_isa_rev <= 5) & !TARGET_TIGON)
	
	/* ISA supports instructions DMULT and DMULTU. */
	#define ISA_HAS_DMULT		(TARGET_64BIT				\
@@ -904,7 +906,7 @@ struct mips_cpu_info {
					 && mips_isa_rev <= 5)
	
	/* ISA supports instructions MULT and MULTU.  */
-	#define ISA_HAS_MULT		(mips_isa_rev <= 5)
+	#define ISA_HAS_MULT		((mips_isa_rev <= 5) && !TARGET_TIGON)
	
	/* ISA supports instructions MUL, MULU, MUH, MUHU.  */
	#define ISA_HAS_R6MUL		(mips_isa_rev >= 6)
@@ -920,7 +922,7 @@ struct mips_cpu_info {
	/* ISA supports instructions DIV and DIVU.
	   This is always true, but the macro is needed for ISA_HAS_<D>DIV
	   in mips.md.  */
-	#define ISA_HAS_DIV		(mips_isa_rev <= 5)
+	#define ISA_HAS_DIV		((mips_isa_rev <= 5) && !TARGET_TIGON)
	
	#define ISA_HAS_DIV3		((TARGET_LOONGSON_2EF			\
					  || TARGET_LOONGSON_3A)		\
@@ -1032,7 +1034,7 @@ struct mips_cpu_info {
					      && (MODE) == V2SFmode))		\
					 && !TARGET_MIPS16)
	
-	#define ISA_HAS_LWL_LWR		(mips_isa_rev <= 5 && !TARGET_MIPS16)
+	#define ISA_HAS_LWL_LWR		(mips_isa_rev <= 5 && !TARGET_MIPS16 && !TARGET_TIGON)
	
	#define ISA_HAS_IEEE_754_LEGACY	(mips_isa_rev <= 5)
	
@@ -1107,7 +1109,7 @@ struct mips_cpu_info {
	/* True if trunc.w.s and trunc.w.d are real (not synthetic)
	   instructions.  Both require TARGET_HARD_FLOAT, and trunc.w.d
	   also requires TARGET_DOUBLE_FLOAT.  */
-	#define ISA_HAS_TRUNC_W		(!ISA_MIPS1)
+	#define ISA_HAS_TRUNC_W		(!ISA_MIPS1 && !TARGET_TIGON)
	
	/* ISA includes the MIPS32r2 seb and seh instructions.  */
	#define ISA_HAS_SEB_SEH		(mips_isa_rev >= 2 && !TARGET_MIPS16)
diff -rupT gcc-5.1.0-orig/gcc/config/mips/mips.opt gcc-5.1.0/gcc/config/mips/mips.opt
--- gcc-5.1.0-orig/gcc/config/mips/mips.opt	2015-01-05 06:33:28.000000000 -0600
+++ gcc-5.1.0/gcc/config/mips/mips.opt	2015-05-02 23:57:40.758194104 -0500
@@ -416,5 +416,9 @@ modd-spreg
	Target Report Mask(ODD_SPREG)
	Enable use of odd-numbered single-precision registers
	
+	mtigon
+	Target Report Var(TARGET_TIGON)
+	Do not use lwl/lwr/swl/swr
+	
	noasmopt
	Driver
Only in gcc-5.1.0/gcc/config/mips: tmp1
Only in gcc-5.1.0/gcc/config/mips: tmp2
diff -rupT gcc-5.1.0-orig/libgcc/config/mips/t-elf gcc-5.1.0/libgcc/config/mips/t-elf
--- gcc-5.1.0-orig/libgcc/config/mips/t-elf	2011-11-07 11:14:32.000000000 -0600
+++ gcc-5.1.0/libgcc/config/mips/t-elf	2015-05-03 12:34:36.658750541 -0500
@@ -1,3 +1,9 @@
	# We must build libgcc2.a with -G 0, in case the user wants to link
	# without the $gp register.
	HOST_LIBGCC2_CFLAGS += -G 0
+	
+	HOST_LIBGCC2_CFLAGS += -mtigon
+	
+	LIB2ADD += $(srcdir)/udivmod.c \
+	          $(srcdir)/divmod.c \
+	          $(srcdir)/udivmodsi4.c
